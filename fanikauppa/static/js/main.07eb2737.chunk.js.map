{"version":3,"sources":["logo.svg","products-data.js","products.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","products","id","name","description","price","picture","bought","Product","product","setProducts","useState","show","setShow","className","onClick","src","width","height","tempLikes","map","addToShoppingCart","ShoppingCart","Products","calcTotal","reduce","a","b","removeFromShoppingCart","showInfo","setShowInfo","show2","setShow2","address","setAddress","setShowAddress","postnr","setPostnr","setShowPostnr","postof","setPostof","setShowPostof","items","setItems","filter","onSubmit","e","preventDefault","onChange","target","value","type","key","App","productsCatalog","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.07eb2737.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","let products = [\r\n    {   id: 1,\r\n        name:\"T-paita\",\r\n        description:\"jotain t-paidasta\",\r\n        price:20,\r\n        picture:\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSv_VJg7ddeouM3GHaAux42hyHh7C6QfbpeIoSYur-1K07hEU-QcRw76nGr6GDk1eu1EUc&usqp=CAU\",\r\n        bought:0\r\n    },\r\n    {   id: 2,\r\n        name:\"Muki\",\r\n        description:\"jotain mukista\",\r\n        price:25,\r\n        picture:\"https://images-na.ssl-images-amazon.com/images/I/61riAzJwx3L._AC_SX522_.jpg\",\r\n        bought:0\r\n    },\r\n    {   id: 3,\r\n        name:\"Juliste\",\r\n        description:\"jotain julisteesta\",\r\n        price:15,\r\n        picture:\"https://static.boredpanda.com/blog/wp-content/uploads/2013/12/funny-posters-things-ive-said-to-my-children-nathan-ripperger-coverimage.jpg\",\r\n        bought:0\r\n    }]\r\nexport default products;","import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\nconst Product = ({product, products, setProducts}) =>{\r\n\r\n    const addToShoppingCart = (id) => {\r\n        const tempLikes = products.map(product => {\r\n            if(product.id === id){\r\n                product = {...product, bought: (product.bought + 1)};\r\n            }\r\n            return product;\r\n        })\r\n        setProducts(tempLikes);\r\n    }\r\n\r\n    const [show, setShow] = useState(false);\r\n    return(\r\n        <div className=\"countryStyle\">\r\n            <button onClick={()=>setShow(!show)} className=\"astext\">{product.name}</button><br/>\r\n            {show &&\r\n            <section>\r\n            <p>{product.description}</p>\r\n            <p>{product.price}€</p>\r\n            </section>\r\n            }\r\n            <button onClick={()=>setShow(!show)} className=\"astext\"><img src={product.picture} width=\"45%\" height=\"45%\"></img></button><br/>\r\n            <button onClick={()=>addToShoppingCart(product.id)}>{product.bought}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ShoppingCart = ({product}) =>{\r\n    return (\r\n        <div>\r\n            name: {product.name} amount: {product.bought} price: {product.price}€ total: {product.price * product.bought}€\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Products = ({products, setProducts}) => {\r\n\r\n    const calcTotal = () =>{\r\n        let amounts = products.map(product => product.bought);\r\n        let total = amounts.reduce((a, b) => a + b, 0);\r\n        return total;\r\n    }\r\n\r\n    const calcTotalPrice = () =>{\r\n        let amounts = products.map(product => (product.bought * product.price));\r\n        let total = amounts.reduce((a, b) => a + b, 0);\r\n        return total;\r\n    }\r\n\r\n    const removeFromShoppingCart = () => {\r\n        const tempLikes = products.map(product => {\r\n            product = {...product, bought: (product.bought = 0)};\r\n            return product;\r\n        })\r\n        setProducts(tempLikes);\r\n    }\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [showInfo, setShowInfo] = useState(false);\r\n    const [show2, setShow2] = useState(false);\r\n    const [address, setAddress] = useState(\"\");\r\n    const [showAddress, setShowAddress] = useState(\"\");\r\n    const [postnr, setPostnr] = useState(\"\");\r\n    const [showPostnr, setShowPostnr] = useState(\"\");\r\n    const [postof, setPostof] = useState(\"\");\r\n    const [showPostof, setShowPostof] = useState(\"\");\r\n    const [items, setItems] = useState(0);\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        setItems(calcTotal());\r\n        removeFromShoppingCart();\r\n        if(address === \"\" && postnr === \"\" && postof === \"\" && items === 0){\r\n            setShow2(false);\r\n            setAddress(\"\");\r\n            setPostnr(\"\");\r\n            setPostof(\"\");\r\n        }else{\r\n            setShow2(true);\r\n            setShowAddress(address);\r\n            setShowPostnr(postnr);\r\n            setShowPostof(postof);\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <button onClick={()=>setShowInfo(!showInfo)}>Ostoskori: {calcTotal()}</button>\r\n                {showInfo && \r\n                <selection>\r\n                    {products.filter(product => product.bought > 0).map(product =><ShoppingCart product = {product}/>)}\r\n                    Total price: {calcTotalPrice()}€\r\n                </selection>\r\n                }\r\n                    \r\n\r\n                <button onClick={()=>removeFromShoppingCart()}>Tyhjennä ostoskori</button>\r\n                <button onClick={()=>setShow(!show)}>Vahvistatilaus</button>\r\n                {show &&\r\n                <section>\r\n                <form onSubmit={handleSubmit}>\r\n                    Address\r\n                    <input onChange={(e)=>setAddress(e.target.value)} type=\"text\" value={address}></input><br />\r\n                    Post number\r\n                    <input onChange={(e)=>setPostnr(e.target.value)} type=\"text\" value={postnr}></input><br />\r\n                    Post office\r\n                    <input onChange={(e)=>setPostof(e.target.value)} type=\"text\" value={postof}></input><br />\r\n                    <button type=\"submit\">submit</button>\r\n                </form>\r\n                </section>\r\n                }\r\n                {show2 &&\r\n                <selection>\r\n                    Thanks for buying!<br/>\r\n                    Address: {address}<br/>\r\n                    Post number: {postnr}<br/>\r\n                    Post office: {postof}<br/>\r\n                    Items bought: {items}\r\n                </selection>\r\n                }\r\n\r\n            </div><hr /><br />\r\n            {products.map(product => <Product key={product.id} product = {product} products = {products} setProducts = {setProducts} />)}\r\n        </div>\r\n    )\r\n}\r\nexport {Product, Products};","import React, { useState } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport productsCatalog from './products-data.js';\r\nimport {Product, Products} from './products.js';\r\n\r\nfunction App() {\r\n  const [products, setProducts] = useState(productsCatalog);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Fanikauppa</h1>\r\n        <Products products = {products} setProducts = {setProducts}/>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}